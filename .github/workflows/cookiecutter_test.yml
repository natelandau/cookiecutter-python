---
name: "Test Cruft Create"

on:
    workflow_dispatch:
    push:
        branches:
            - main
        paths-ignore:
            - "*.md"
            - "*.yaml"
            - "*.yml"
    pull_request:
        types:
            - opened
            - reopened
            - synchronize
        paths-ignore:
            - "*.md"
            - "*.yaml"
            - "*.yml"

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    test-cookiecutter:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                # python-version: ["3.10", "3.11", "3.12"]
                python-version: ["3.10"]
        name: Python ${{ matrix.python-version }}

        steps:
            # ----------------------------------------------
            #    Install python and checkout repository
            # ----------------------------------------------
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Checkout
              uses: actions/checkout@v4

            # ----------------------------------------------
            #    Install poetry and project dependencies
            # ----------------------------------------------

            - name: Setup Python and Poetry
              uses: ./.github/actions/setup-poetry

            - name: Install dependencies
              run: poetry install

            # ----------------------------------------------
            #    Install poetry and project dependencies
            # ----------------------------------------------

            - name: Run cookiecutter create
              shell: bash
              run: |
                  poetry run cookiecutter --no-input . python_version="${{ matrix.python-version }}"
                  cd my-package
                  echo "-----------> poetry info <-----------"
                  poetry env info
                  echo "-----------> poetry install <-----------"
                  poetry install
                  echo "-----------> activate virtualenv <-----------"
                  poetry env use ${PWD}/.venv/bin/python
                  echo "-----------> poetry info <-----------"
                  poetry env info
                  echo "-----------> test installed package <-----------"
                  my_package --version
                  pytest tests/

            # # ----------------------------------------------
            # #    Test installed package
            # # ----------------------------------------------
            # - name: Test package
            #   shell: bash
            #   run: |
            #       poetry run my_package --version
            #       poetry run pytest
