---
name: Publish to PyPi
on:
    workflow_dispatch:
    release:
        types:
            - published

            {% raw %}
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
{% endraw %}

jobs:
    publish-to-pypi:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: true
            matrix:
                python-version: ["{{ cookiecutter.python_version.split(".")[0] }}.{{ cookiecutter.python_version.split(".")[1] }}"]
        steps:
            - name: Harden Security Runner
              uses: step-security/harden-runner@v2
              with:
                  egress-policy: block
                  disable-sudo: true
                  allowed-endpoints: >
                      api.github.com:443
                      files.pythonhosted.org:443
                      github.com:443
                      install.python-poetry.org:443
                      pypi.org:443
                      python-poetry.org:443
                      upload.pypi.org:443

            # ----------------------------------------------
            #    Checkout repository
            # ----------------------------------------------

            - name: Checkout repository
              uses: actions/checkout@v4

            # ----------------------------------------------
            #    Install Python, Poetry, and project dependencies
            # ----------------------------------------------

            - name: Setup Python and Poetry
              uses: ./.github/actions/setup-poetry

            # ----------------------------------------------
            # Test before building and uploading the package
            # ----------------------------------------------
            - name: run poetry checks
              run: |
                  poetry run poetry check
                  poetry run coverage run

            # ----------------------------------------------
            # Publish to PyPi
            # ----------------------------------------------
{% raw %}
            - name: Publish
              env:
                  PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
              run: |
                  poetry config pypi-token.pypi $PYPI_TOKEN
                  poetry publish --build
{% endraw %}
