---
name: "Upload to Codecov"

on:
    workflow_dispatch:
    workflow_run:
        workflows: ["Automated Tests"]
        types:
            - completed
        branches:
            - main

{% raw %}
concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true
{% endraw %}

jobs:
    upload-coverage:
        runs-on: ubuntu-latest

{% raw %}
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
{% endraw %}

        strategy:
            fail-fast: true
            matrix:
                python-version: ["{{ cookiecutter.python_version.split(".")[0] }}.{{ cookiecutter.python_version.split(".")[1] }}"]
        steps:
            - name: Harden Security Runner
              uses: step-security/harden-runner@v2
              with:
                  egress-policy: block
                  disable-sudo: true
                  allowed-endpoints: >
                      api.github.com:443
                      api.snapcraft.io:443
                      auth.docker.io:443
                      codecov.io:443
                      files.pythonhosted.org:443
                      github.com:443
                      install.python-poetry.org:443
                      production.cloudflare.docker.com:443
                      python-poetry.org:443
                      registry-1.docker.io:443
                      storage.googleapis.com:443
                      *.codecov.io:443

            # ----------------------------------------------
            #    Checkout repository
            # ----------------------------------------------

            - name: Checkout repository
              uses: actions/checkout@v4

            # ----------------------------------------------
            #    Install Python, Poetry, and project dependencies
            # ----------------------------------------------

            - name: Setup Python and Poetry
              uses: ./.github/actions/setup-poetry

            # ----------------------------------------------
            #    run test suite
            # ----------------------------------------------
            - name: Run tests with pytest
              run: |
                  poetry run coverage run
                  poetry run coverage report
                  poetry run coverage xml
            # ----------------------------------------------
            #             upload coverage stats
            # ----------------------------------------------
{% raw %}
            - name: Upload coverage
              uses: codecov/codecov-action@v4
              with:
                  files: reports/coverage.xml
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    on-failure:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        steps:
            - run: echo 'The triggering workflow failed'
{% endraw %}
